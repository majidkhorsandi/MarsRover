{\rtf1\ansi\ansicpg1252\cocoartf1265
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww18520\viewh11560\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 \
Assumptions:\
\
1- MissionControlUnit contains main method. In main method is supposed to check to runtime arguments. first one should be landing position like \'9344N\'94 and second one should be the movement string like \'93LMMMRRM\'94. I did a very simple check here to make sure I have more than 1 arguments so use first one as landing position and second one as movement and just ignore the rest. if no/not enough arguments are provided I just set default values for landing position and movement so that program execution can start. It could be implemented better but I put more time on actual program logic.\
\
2- width and height of plateau (x,y) are defined as constants in Rover class. I assume them as borders on the plateau that rover is allowed to reach but not pass. I have written the code in a way that x and y are not required to be equal and as long as both x and y are smaller or equal to 9 program should work and all test cases should pass. So a plateau can be rectangle instead of square.\
\
3- I check sanity of commands (landing position and movement string) inside Rover class itself. Here I assume MissionControlUnit can send wrong commands by mistake or a command might be interrupted by spatial noises!\
\
4- I assume minimum size of x and y are 0\
}